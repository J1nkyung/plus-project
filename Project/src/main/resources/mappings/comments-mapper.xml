<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.plus.mapper.CommentsMapper">
	<resultMap id="commResult" type="comments">
		<id property="commentsNum" column="comments_num" />
		<result property="commentsClass" column="comments_Class" />
		<result property="memberNum" column="member_num" />
		<result property="memberNickname" column="member_nickname" />
		<result property="memberPic" column="member_pic" />
		<result property="boardNum" column="board_num" />
		<result property="commentsRegdate" column="comments_regdate" />
		<result property="commentsChangedRegdate" column="comments_changed_regdate" />
		<result property="commentsContent" column="comments_content" />
	</resultMap>

	<insert id="insertComment">
		INSERT INTO comments(member_num, board_num, comments_regdate, comments_content) 
		VALUES (#{memberNum},#{boardNum},STR_TO_DATE(#{commentsRegdate}, '%Y. %m. %d %H:%i:%s'),#{commentsContent})
		
		<selectKey resultType="int" keyProperty="commentsNum" order="AFTER">
			SELECT LAST_INSERT_ID()
      </selectKey>
	</insert>
	
	<update id="updateComment">
		UPDATE comments SET comments_content=#{commentsContent}, comments_regdate = #{commentsRegdate}
		WHERE comments_num = #{commentsNum}
	</update>
	
	<delete id="deleteComment">
		DELETE FROM comments WHERE comments_num = #{commentsNum}
	</delete>
	
	<select id="getComments" resultMap="commResult">
		SELECT member_nickname, member_num, member_pic, comments_num, board_num, comments_content, date_format(comments_regdate,'%Y.%c.%e %H:%i') as comments_changed_regdate 
		FROM comments 
		JOIN member USING (member_num) WHERE board_num = #{boardNum} AND comments_class IS NULL
		ORDER BY comments_regdate DESC
	</select>
	
	<select id="getCommentsCount" resultType="Integer">
		SELECT count(*) FROM comments WHERE board_num = #{boardNum} AND comments_class IS NULL
	</select>
	
	<!-- 댓글 더보기.. 몇개씩? -->
	<!-- <select id="getMoreComments" resultMap="commResult">
		SELECT member_nickname, member_num, board_num, comments_num, comments_content, date_format(comments_regdate,'%Y.%c.%e %H:%i') as comments_changed_regdate 
		FROM comments 
		JOIN member USING (member_num) WHERE board_num = #{boardNum} 
		ORDER BY comments_regdate DESC LIMIT #{startIndex}, 5
	</select> -->
	
	<!-- 대댓글 가져오기 -->
	<select id="getReComments" resultMap="commResult">
		SELECT member_nickname, member_num, board_num, comments_num, comments_class, comments_content, date_format(comments_regdate,'%Y.%c.%e %H:%i') as comments_changed_regdate  FROM comments
		JOIN member USING (member_num) WHERE comments_class = #{commentsClass} ORDER BY comments_regdate DESC
	</select>
	
	<insert id="insertReComments">
		INSERT INTO comments(member_num, board_num, comments_class, comments_regdate, comments_content) 
		VALUES (#{memberNum}, #{boardNum}, #{commentsClass}, STR_TO_DATE(#{commentsRegdate}, '%Y. %m. %d %H:%i:%s'),#{commentsContent})
		
		<selectKey resultType="int" keyProperty="commentsNum" order="AFTER">
			SELECT LAST_INSERT_ID()
      </selectKey>
	</insert>
	
	<select id="getBoardWriter" resultMap="commResult">
		SELECT member_num FROM board WHERE board_num = #{boardNum}
	</select>
	
<!-- 멤버 테이블과 조인 쿼리 써야함 
	<select id="getMemberNickname">
		SELECT member_nickname FROM member WHERE member_num = #{memberNum}
	</select> -->
	<select id="selectMyCommentsList" resultType="com.project.plus.domain.CommentsVO">
		SELECT paging.*  
		FROM ( 
		        SELECT comments.comments_num as commentsNum ,
					   comments.member_num as memberNum ,
					   comments.board_num as boardNum , 
					   comments.comments_class as commentsClass ,
					   comments.comments_regdate as commentsRegdate , 
					   comments.comments_content as commentsContent ,
					   board.board_content as boardContent , 
					   board.board_regdate as boardRegdate,
		               ROW_NUMBER() OVER(ORDER BY comments_regdate DESC) AS RNUM
		         FROM comments , board 
		         WHERE comments.board_num = board.board_num 
					   AND comments.member_num = #{memberNum}
					   AND board.board_num = (select board.board_num
												from club
												where board.club_num = club.club_num
												and board.club_num =#{clubNum}) 
		      ) paging
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY commentsNum DESC
		
		<!-- SELECT comments.comments_num as commentsNum ,
			   comments.member_num as memberNum ,
			   comments.board_num as boardNum , 
			   comments.comments_class as commentsClass ,
			   comments.comments_regdate as commentsRegdate , 
			   comments.comments_content as commentsContent ,
			   board.board_content as boardContent , 
			   board.board_regdate as boardRegdate
		FROM comments , board
		WHERE comments.board_num = board.board_num 
		AND comments.member_num = #{memberNum}
		AND board.board_num = (select board.board_num
									from club
									where board.club_num = club.club_num
									and board.club_num =#{clubNum}) 
		ORDER BY comments_regdate DESC; -->
	</select>
	
	<!-- 페이징용 전체 문의글 개수 세기 -->
	<select id="selectMyCommentsListCount" resultType="int">
		SELECT count(*)
		FROM ( 
		        SELECT comments.comments_num as commentsNum ,
					   comments.member_num as memberNum ,
					   comments.board_num as boardNum , 
					   comments.comments_class as commentsClass ,
					   comments.comments_regdate as commentsRegdate , 
					   comments.comments_content as commentsContent ,
					   board.board_content as boardContent , 
					   board.board_regdate as boardRegdate,
		               ROW_NUMBER() OVER(ORDER BY comments_regdate DESC) AS RNUM
		         FROM comments , board 
		         WHERE comments.board_num = board.board_num 
					   AND comments.member_num = #{memberNum}
					   AND board.board_num = (select board.board_num
												from club
												where board.club_num = club.club_num
												and board.club_num =#{clubNum}) 
		      ) paging
	</select>
</mapper>